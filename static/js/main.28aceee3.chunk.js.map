{"version":3,"sources":["options/toast.js","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","components/ImageGallery/ImageGallery.styled.jsx","services/api.js","components/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/App/App.styled.jsx","components/App/App.jsx","reportWebVitals.js","index.js"],"names":["toastOptions","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","SearchBarHeader","styled","header","SearchForm","form","SearchButton","button","SearchButtonSpan","span","SearchInput","input","SearchBar","onSubmit","useState","query","setQuery","e","preventDefault","toast","error","type","className","autocomplete","name","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","trim","ImageGalleryUl","ul","perPage","api","axios","create","baseURL","responseType","params","key","image_type","orientation","safesearch","per_page","ImageGalleryItemLi","li","ImageGalleryItemImg","img","ImageGalleryItem","id","src","alt","onClick","loading","OverlayDiv","div","ModalDiv","ModalImg","Modal","modalNeighborImages","exitFunc","changeNeighborImages","curr","prev","next","onTapped","useEffect","window","addEventListener","removeEventListener","target","nodeName","largeImageURL","tags","LoadMoreButton","Button","title","ImageGallery","changeStatus","newQuery","pages","setPages","hits","setHits","page","setPage","modalIsOpen","setModalIsOpen","setModalNeighborImages","toggleModal","images","getNeighborImages","quantity","length","i","toString","getResponse","a","get","q","response","status","data","Error","message","onChangeQuery","callback","useCallback","then","total","parseInt","useResponseQuery","onChangePage","useResponsePages","setTimeout","scrollTo","top","document","documentElement","scrollHeight","behavior","map","webformatURL","uuidv4","InfoDiv","Loader","AppSection","section","InfoH1","h1","App","setStatus","lastMessage","setLastMessage","newStatus","info","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.28aceee3.chunk.js","sourcesContent":["const toastOptions = {\n  position: \"top-right\",\n  autoClose: 3000,\n  hideProgressBar: true,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n};\nexport default toastOptions;\n","import styled from '@emotion/styled';\r\n\r\nexport const SearchBarHeader = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14),\r\n    0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const SearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const SearchButton = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const SearchButtonSpan = styled.span`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n`;\r\n\r\nexport const SearchInput = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n  &::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n","import { PropTypes } from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport toastOptions from '../../options/toast';\r\nimport { SearchBarHeader, SearchForm, SearchButton, SearchButtonSpan, SearchInput } from './SearchBar.styled';\r\n\r\nfunction SearchBar({ onSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  function handleQueryChange(e) {\r\n    const value = e.currentTarget.value.toLowerCase();\r\n    setQuery(value.trim());\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!query) {\r\n      toast.error(`Please input search value.`, toastOptions);\r\n      return;\r\n    }\r\n    onSubmit(query);\r\n    setQuery('');\r\n  }\r\n\r\n  return (\r\n    <SearchBarHeader>\r\n      <SearchForm onSubmit={handleSubmit}>\r\n        <SearchButton type='submit'>\r\n          <SearchButtonSpan>Search</SearchButtonSpan>\r\n        </SearchButton>\r\n\r\n        <SearchInput\r\n          className='SearchForm-input'\r\n          type='text'\r\n          autocomplete='off'\r\n          name='pictureName'\r\n          autoFocus\r\n          placeholder='Search images and photos'\r\n          value={query}\r\n          onChange={handleQueryChange}\r\n        />\r\n        <ToastContainer />\r\n      </SearchForm>\r\n    </SearchBarHeader>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ImageGalleryUl = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n","import axios from \"axios\";\n\nconst apiUrl = \"https://pixabay.com/api/\";\nconst key = \"22594439-4316377fda5f0b6c1b052f095\";\nconst imageType = \"photo\";\nconst orientation = \"horizontal\";\nconst safesearch = \"false\";\nexport const perPage = 12;\n\nexport const api = axios.create({\n  baseURL: apiUrl,\n  responseType: \"json\",\n  params: {\n    key,\n    image_type: imageType,\n    orientation,\n    safesearch,\n    per_page: perPage,\n  },\n});\n","import styled from '@emotion/styled';\r\n\r\nexport const ImageGalleryItemLi = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14),\r\n    0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const ImageGalleryItemImg = styled.img`\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  &:hover {\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n`;\r\n","import { PropTypes } from 'prop-types';\r\nimport { ImageGalleryItemImg, ImageGalleryItemLi } from './ImageGalleryItem.styled';\r\n\r\nconst ImageGalleryItem = ({ id, src, alt, onClick }) => {\r\n  return (\r\n    <ImageGalleryItemLi>\r\n      <ImageGalleryItemImg src={src} alt={alt} id={id} loading='lazy' onClick={onClick} />\r\n    </ImageGalleryItemLi>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const OverlayDiv = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`;\r\nexport const ModalDiv = styled.div`\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n`;\r\nexport const ModalImg = styled.img`\r\n  width: 100%auto;\r\n`;\r\n","import { PropTypes } from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { OverlayDiv, ModalDiv, ModalImg } from './Modal.styled';\r\n\r\nfunction Modal({ modalNeighborImages, exitFunc, changeNeighborImages }) {\r\n  const { curr, prev, next } = modalNeighborImages;\r\n  function onTapped(e) {\r\n    e.preventDefault();\r\n    if (e.key === 'Escape') exitFunc();\r\n    if (e.key === 'ArrowLeft') changeNeighborImages(prev.id);\r\n    if (e.key === 'ArrowRight') changeNeighborImages(next.id);\r\n  }\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', onTapped);\r\n\r\n    return function cleanup() {\r\n      window.removeEventListener('keydown', onTapped);\r\n    };\r\n  });\r\n\r\n  function onClickModal(e) {\r\n    if (e.target.nodeName === 'DIV') exitFunc();\r\n  }\r\n\r\n  return (\r\n    <OverlayDiv onClick={onClickModal}>\r\n      <ModalDiv>\r\n        <ModalImg src={curr.largeImageURL} alt={curr.tags} loading='lazy' />\r\n      </ModalDiv>\r\n    </OverlayDiv>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n  modalNeighbors: PropTypes.exact({\r\n    curr: PropTypes.object.isRequired,\r\n    prev: PropTypes.object.isRequired,\r\n    next: PropTypes.object.isRequired,\r\n  }),\r\n  exitFunc: PropTypes.func.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const LoadMoreButton = styled.button`\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14),\r\n    0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n","import { PropTypes } from 'prop-types';\r\nimport { LoadMoreButton } from './Button.styled';\r\n\r\nfunction Button({ title, onClick }) {\r\n  return <LoadMoreButton onClick={onClick}>{title}</LoadMoreButton>;\r\n}\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { ImageGalleryUl } from './ImageGallery.styled';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { api, perPage } from '../../services/api';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport Modal from '../Modal';\r\nimport Button from '../Button';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction ImageGallery({ changeStatus, newQuery }) {\r\n  const [pages, setPages] = useState(0);\r\n  const [hits, setHits] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n  const [page, setPage] = useState(1);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [modalNeighborImages, setModalNeighborImages] = useState(null);\r\n\r\n  function toggleModal(e) {\r\n    let images = null;\r\n    if (e) {\r\n      e.preventDefault();\r\n      images = getNeighborImages(e.target.id);\r\n    }\r\n    setModalIsOpen(prev => !prev);\r\n    setModalNeighborImages(images);\r\n  }\r\n\r\n  function getNeighborImages(id) {\r\n    const quantity = hits.length;\r\n    if (quantity < 1) return null;\r\n    for (let i = 0; i < quantity; i++) {\r\n      if (hits[i].id.toString() === id.toString()) {\r\n        const prev = i === 0 ? hits[quantity - 1] : hits[i - 1];\r\n        const next = i === quantity - 1 ? hits[0] : hits[i + 1];\r\n        const curr = hits[i];\r\n        return { prev, curr, next };\r\n      }\r\n    }\r\n  }\r\n\r\n  function changeNeighborImages(id) {\r\n    const images = getNeighborImages(id);\r\n    setModalNeighborImages(images);\r\n  }\r\n\r\n  async function getResponse(query, page) {\r\n    try {\r\n      const response = await api.get(`/`, {\r\n        params: {\r\n          q: query,\r\n          page,\r\n        },\r\n      });\r\n      if (response.status === 200) {\r\n        return response.data;\r\n      } else {\r\n        throw new Error('Error - ' + response.status);\r\n      }\r\n    } catch (error) {\r\n      changeStatus('rejected', error.message);\r\n    }\r\n  }\r\n\r\n  function useResponseQuery(query) {\r\n    const callback = useCallback(async () => {\r\n      changeStatus('pending');\r\n      await getResponse(query, 1).then(({ total, hits }) => {\r\n        if (total > 0) {\r\n          //найдено картинки\r\n          const pages = total % perPage > 0 ? parseInt(total / perPage) + 1 : total / perPage;\r\n          changeStatus('resolved', `Was found ${total} results. Avaliable ${pages} pages!`);\r\n          setPages(pages);\r\n        } else {\r\n          //не найдено картинки\r\n          changeStatus('idle', `Please, start new search.`);\r\n          setPages(0);\r\n        }\r\n        setHits(hits);\r\n        setQuery(newQuery);\r\n        setPage(1);\r\n      });\r\n    }, [query]);\r\n    return { callback };\r\n  }\r\n  const onChangeQuery = useResponseQuery(newQuery).callback;\r\n\r\n  function useResponsePages(query, page) {\r\n    const callback = useCallback(async () => {\r\n      await getResponse(query, page).then(({ total, hits }) => {\r\n        if (hits.length > 0) {\r\n          changeStatus('resolved', `Added more ${perPage} pictures! Current page ${page} of ${pages} pages.`);\r\n          setHits(prev => [...prev, ...hits]);\r\n        }\r\n      });\r\n    }, [query, page]);\r\n    return { callback };\r\n  }\r\n  const onChangePage = useResponsePages(query, page).callback;\r\n\r\n  ////////first page\r\n\r\n  useEffect(() => {\r\n    if (!newQuery) return;\r\n    onChangeQuery();\r\n  }, [newQuery, onChangeQuery]);\r\n\r\n  /////// pagination\r\n  function loadMore() {\r\n    setPage(prev => prev + 1);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (query === '' || page < 2) return;\r\n    onChangePage(); //callback\r\n    window.setTimeout(e => {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }, 300);\r\n  }, [query, page, onChangePage]);\r\n  ////// render\r\n  return (\r\n    <>\r\n      <ImageGalleryUl>\r\n        {hits.length > 0 &&\r\n          hits.map(({ id, webformatURL, tags }) => {\r\n            return <ImageGalleryItem key={uuidv4()} id={id} src={webformatURL} alt={tags} onClick={toggleModal} />;\r\n          })}\r\n      </ImageGalleryUl>\r\n      {pages > page && <Button title={`load more ${perPage} pictures`} onClick={loadMore} />}\r\n      {modalIsOpen && (\r\n        <Modal\r\n          modalNeighborImages={modalNeighborImages}\r\n          exitFunc={toggleModal}\r\n          changeNeighborImages={changeNeighborImages}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n  newQuery: PropTypes.string.isRequired,\r\n  changeStatus: PropTypes.func.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const InfoDiv = styled.div`\r\n  position: fixed;\r\n  top: 40%;\r\n  padding: 40px;\r\n  text-align: center;\r\n  margin: 50px auto;\r\n  font-size: 50px;\r\n  font-weight: 800;\r\n  color: lightgrey;\r\n  filter: drop-shadow(2px 4px 6px black);\r\n  background: linear-gradient(217deg, rgba(255, 0, 0, 0.8), rgba(255, 0, 0, 0) 70.71%),\r\n    linear-gradient(127deg, rgba(0, 255, 0, 0.8), rgba(0, 255, 0, 0) 70.71%),\r\n    linear-gradient(336deg, rgba(0, 0, 255, 0.8), rgba(0, 0, 255, 0) 70.71%);\r\n  border-radius: 50px;\r\n`;\r\n","import { PropTypes } from 'prop-types';\r\nimport { InfoDiv } from './Loader.styled';\r\n\r\nconst Loader = ({ query }) => {\r\n  return <InfoDiv>Searching for a {query}...</InfoDiv>;\r\n};\r\n\r\nexport default Loader;\r\n\r\nLoader.propTypes = {\r\n  query: PropTypes.string.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const AppSection = styled.section`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 16px;\r\n  padding-bottom: 24px;\r\n  margin-top: 0;\r\n`;\r\n\r\nexport const InfoDiv = styled.div`\r\n  position: fixed;\r\n  top: 40%;\r\n  text-align: center;\r\n  margin: 50px auto;\r\n  font-size: 50px;\r\n  font-weight: 800;\r\n  color: lightgrey;\r\n  filter: drop-shadow(2px 4px 6px black);\r\n`;\r\n\r\nexport const InfoH1 = styled.h1`\r\n  color: black;\r\n  margin-top: 0;\r\n`;\r\n","import { useState, useCallback } from 'react';\nimport SearchBar from '../SearchBar';\nimport ImageGallery from '../ImageGallery';\nimport Loader from '../Loader/Loader';\nimport { AppSection, InfoDiv, InfoH1 } from './App.styled';\nimport { toast } from 'react-toastify';\nimport toastOptions from '../../options/toast';\n\nfunction App() {\n  const [status, setStatus] = useState('idle');\n  const [query, setQuery] = useState('');\n  const [lastMessage, setLastMessage] = useState('');\n\n  function handleFormSubmit(query) {\n    setStatus('resolved');\n    setQuery(query);\n  }\n\n  const changeStatus = useCallback(\n    (newStatus, message = '') => {\n      if (message && message !== lastMessage) {\n        toast.info(message, toastOptions);\n        setLastMessage(message);\n      }\n      setStatus(newStatus);\n    },\n    [lastMessage],\n  );\n\n  return (\n    <AppSection>\n      <SearchBar onSubmit={handleFormSubmit} />\n      {status === 'idle' && (\n        <InfoDiv>\n          {query && <InfoH1>Sorry, {query} not found</InfoH1>}\n          Waiting for you to start new searching\n        </InfoDiv>\n      )}\n      <ImageGallery newQuery={query} changeStatus={changeStatus} />\n      {status === 'rejected' && <InfoDiv>{lastMessage}</InfoDiv>}\n      {status === 'pending' && <Loader query={query} />}\n    </AppSection>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}